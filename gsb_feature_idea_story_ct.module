<?php
/**
 * @file
 * Code for the GSB Feature Idea Story Content Type feature.
 */

include_once 'gsb_feature_idea_story_ct.features.inc';

/**
 * Implements hook_form_FORM_ID_alter() for event node edit form.
 */
function gsb_feature_idea_story_ct_form_idea_story_node_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id != 'idea_story_node_form') {
    return;
  }

  $language = $form['language']['#value'];

  $form['field_link_key_audio']['#states'] = array(
    'visible' => array(
      ':input[name="field_icon[' . $language . ']"]' => array(
        array('value' => 'audio'),
      ),
    ),
  );

  $form['field_link_key_video']['#states'] = array(
    'visible' => array(
      ':input[name="field_icon[' . $language . ']"]' => array(
        array('value' => 'video'),
      ),
    ),
  );

  $form['field_program_single']['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
    array('checked' => FALSE),
  );

  $form['#after_build'][] = 'gsb_feature_idea_story_ct_after_build';

}

/**
 *  Implements hook_field_group_pre_render_alter().
 */
function gsb_feature_idea_story_ct_field_group_pre_render_alter(&$element, $group, &$form) {
  // Hide field group for alumni name if alumni checkbox is not checked.
  if ($element['#id'] == 'node_idea_story_form_group_alumni_name') {
    $language = $form['language']['#value'];
    $element['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
      array('checked' => FALSE),
    );
  }
}

/**
 * gsb_feature_idea_story_ct_after_build()
 *
 * Adds the js needed for replace the key taxonomy select field with
 * our hierarchy lite select field.
 */
function gsb_feature_idea_story_ct_after_build($form, &$form_state) {
  $form['field_link_unlimited']['und']['#title'] = 'Link Title';
  $form['field_link_unlimited']['und'][0]['title']['#title'] = 'Link Title';
  return $form;
}

/**
 * Implements hook_date_popup_process_alter().
 */
function gsb_feature_idea_story_ct_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($form_state['build_info']['form_id'] != 'idea_story_node_form') {
    return;
  }
  if (isset($element['#field']['field_name']) && $element['#field']['field_name'] == 'field_date') {
    $element['date']['#description'] = '';
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function gsb_feature_idea_story_ct_field_widget_entityreference_autocomplete_form_alter(&$element, &$form_state, $context) {
  if ($form_state['build_info']['form_id'] != 'idea_story_node_form') {
    return;
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_person_fac_ref') {
    $element['target_id']['#title'] = 'Faculty Name';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_idea_story') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_other_content') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_events') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
}
/**
 * Implements hook_field_extra_fields().
 */
function gsb_feature_idea_story_ct_field_extra_fields() {
  $extra['field_collection_item']['field_related_other_unlimited']['display']['related_content_label'] = array(
    'label' => t('Related content entity: Title'),
    'description' => t('Title from referenced entity field.'),
    'weight' => 1,
  );

  $extra['node']['idea_story']['display']['gsb_feature_idea_story_ct_explore_more'] = array(
    'label' => t('Explore more'),
    'description' => t('Shows 3 best matching idea stories by Key Taxonomy.'),
    'weight' => 20,
  );

  $extra['node']['idea_story']['display']['insights_signup_form'] = array(
    'label' => t('Insights signup form'),
    'description' => t('Displays a "Sign up for more insights & ideaas." form'),
    'weight' => 21,
  );

  return $extra;
}

/**
 * Implements hook_entity_view().
 *
 *  - Render referenced entity title from 'field_related_other' field as an extra field.
 */
function gsb_feature_idea_story_ct_entity_view($entity, $type, $view_mode, $langcode) {
  if ($type == 'field_collection_item' && $entity->field_name == 'field_related_other_unlimited') {
    // If this field is not configured for this view mode, skip it.
    $fields = field_extra_fields_get_display($type, $entity->field_name, $view_mode);
    if (empty($fields['related_content_label']['visible'])) {
      return;
    }

    $wrapper = entity_metadata_wrapper($type, $entity);

    if ($wrapper->field_related_other_content->value()) {
      // Add extra field that displays referenced entity title.
      $entity->content['related_content_label'] = array(
        '#theme' => 'link',
        '#path' => 'node/' . $wrapper->field_related_other_content->getIdentifier(),
        '#text' => $wrapper->field_related_other_content->label(),
        '#prefix' => '<h3>',
        '#suffix' => '</h3>',
        '#options' => array(
          'attributes' => array(
            'class' => array('field-name-field-title'),
            ),
          'html' => FALSE,
        ),
      );
    }
  }

  /**
   * Explore more extra field.
   *  - Pick 3 most relevant nodes by Key Taxonomy.
   */
  if ($type == 'node' && $entity->type == 'idea_story') {
    // If this field is not configured for this view mode, skip it.
    $fields = field_extra_fields_get_display('node', $entity->type, $view_mode);
    if (empty($fields['gsb_feature_idea_story_ct_explore_more']['visible'])) {
      return;
    }

    $wrapper = entity_metadata_wrapper($type, $entity);
    $tids = array();
    foreach ($wrapper->field_key_taxonomy as $term) {
      if ($term->value()) {
        $tids[] = $term->value()->tid;
      }
    };

    if (empty($tids)) {
      return;
    }
    $result = db_query("
      SELECT n.nid, n.created, COUNT(t.tid) score
      FROM {node} n
      INNER JOIN {field_data_field_key_taxonomy} kt ON kt.entity_id = n.nid
      INNER JOIN {taxonomy_term_data} t ON t.tid = kt.field_key_taxonomy_target_id
      WHERE nid != :nid
      AND n.type = 'idea_story'
      AND t.tid IN (:tids)
      GROUP BY n.nid
      ORDER BY score DESC, created DESC
      LIMIT 3
    ", array(':nid' => $entity->nid, ':tids' => $tids))->fetchAllAssoc('nid');

    $nids = array_keys($result);

    if ($nids) {
      $nodes = node_load_multiple($nids);
      $content = node_view_multiple($nodes, 'teaser');

      // Wrap content in container.
      $content_wrapper = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array('explore-more-content'),
        ),
      );
      $content_wrapper['content'] = $content;
      // Wrap content and title in container.
      $container = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array('explore-more-wrapper'),
        ),
      );

      // Add a title.
      $container['title'] = array('#markup' => '<div class="superhead">' . t('Explore more') . '</div>');
      $container['content'] = $content_wrapper;

      $entity->content['gsb_feature_idea_story_ct_explore_more'] = $container;
    }
  }
}
